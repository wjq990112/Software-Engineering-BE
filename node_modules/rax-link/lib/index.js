"use strict";

exports.__esModule = true;
exports.default = void 0;

var _rax = require("rax");

var _universalEnv = require("universal-env");

var _raxText = _interopRequireDefault(require("rax-text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Link = (0, _rax.forwardRef)(function (props, ref) {
  var className = props.className,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      onClick = props.onClick,
      onPress = props.onPress,
      children = props.children,
      _props$miniappHref = props.miniappHref,
      miniappHref = _props$miniappHref === void 0 ? '' : _props$miniappHref,
      rest = __rest(props, ["className", "style", "onClick", "onPress", "children", "miniappHref"]);

  var textStyle = {
    color: style.color,
    lines: style.lines,
    fontSize: style.fontSize,
    fontStyle: style.fontStyle,
    fontWeight: style.fontWeight,
    textDecoration: style.textDecoration || 'none',
    textAlign: style.textAlign,
    fontFamily: style.fontFamily,
    textOverflow: style.textOverflow
  };

  if (_universalEnv.isMiniApp || _universalEnv.isWeChatMiniProgram) {
    // miniappHref example: navigate:/pages/index/index
    var _miniappHref$split = miniappHref.split(':'),
        openType = _miniappHref$split[0],
        url = _miniappHref$split[1];

    return (0, _rax.createElement)("navigator", _extends({
      "open-type": openType,
      url: url,
      className: className,
      style: style
    }, rest), children);
  }

  return (0, _rax.createElement)("a", _extends({}, rest, {
    ref: ref,
    className: className,
    style: style,
    onClick: onClick || onPress
  }), typeof children === 'string' ? (0, _rax.createElement)(_raxText.default, {
    style: textStyle
  }, children) : children);
});
Link.displayName = 'Link';
var _default = Link;
exports.default = _default;